# set default shell to zsh
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

#Set the prefix to `
unbind C-b
set-option -g prefix `
bind ` send-prefix

# 0 is too far from ` ;)
set -g base-index 1
setw -g pane-base-index 1

# act like vim
setw -g mode-keys vi

setw -g automatic-rename off
# don't rename windows automatically
set-option -g allow-rename off

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal "screen-256color"
set -g status-keys vi
set -g history-limit 10000

# Needed to make ctrl-left/right arrow work for skipping words at the shell
set-option -gw xterm-keys on

# Mouse handling
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
#The following should toggle mouse mode but doesn't work
#bind m run "`if [[ `tmux show-options -w | grep mouse.*on` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"mouse tmux: \$toggle\"; tmux set-option -w mouse \$toggle &> /dev/null;`"

#setw -g mode-mouse off
#setw -g mouse-select-window off
#setw -g mouse-select-pane off
setw -g monitor-activity on

# Toggle sync panes on/off
bind-key Z setw synchronize-panes

# Kill the tmux session
bind-key X confirm-before -p "Kill session #S (y/n)?" kill-session

# Interactive tree picker for selecting session/window
bind-key S choose-tree

# Create splits
bind-key v split-window -h
bind-key s split-window -v

# Change layout
bind-key V select-layout main-vertical
bind-key H select-layout main-horizontal
bind-key T select-layout tiled

# Use Alt-vim to resize panes
bind -r M-h resize-pane -L
bind -r M-j resize-pane -D 
bind -r M-k resize-pane -U
bind -r M-l resize-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Stop tmux hijacking ctrl-left/right so we can do word skipping at the shell
unbind-key -n C-Left
unbind-key -n C-Right

# resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

#Toggle synchonised panes (a la Terminator)
bind -n M-x setw synchronize-panes

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# The statusbar {
#set -g status-position bottom
#set -g status-bg colour238
#set -g status-fg colour137
#set -g status-attr dim
#set -g status-left '#{?pane_synchronized, #[bg=red fg=white bold]  SYNCHRONISED  #[default],}'
#set -g status-right '#[fg=white,bold](#S) #[fg=colour37]#(whoami) #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=colour37,bg=colour238,bold] %d/%m #[fg=colour37,bg=colour238,bold] %H:%M:%S #{?pane_synchronized, #[bg=red fg=white bold]  SYNCHRONISED  #[default],}'
#set -g status-right-length 100
#set -g status-left-length 20
#
#setw -g window-status-current-fg colour29
#setw -g window-status-current-bg colour238
#setw -g window-status-current-attr bold
#setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour51]#W#[fg=colour51]#F '
#
#setw -g window-status-fg colour29
#setw -g window-status-bg colour238
#setw -g window-status-attr none
#setw -g window-status-format ' #I#[fg=colour235]:#[fg=colour250]#W#[fg=colour244]#F '
#
#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1
# }

# The messages {
#set -g message-attr bold
#set -g message-fg colour232
#set -g message-bg colour166
# }

# pane number display
#set-option -g display-panes-active-colour brightgreen #blue
set-option -g display-panes-active-colour colour238 #blue
#set-option -g display-panes-colour colour238 #orange
set-option -g display-panes-colour colour29 #orange

# The window {
#set inactive/active window styles
set -g window-style 'fg=colour245,bg=colour235'
set -g window-active-style 'fg=colour250,bg=colour235'
# }

# The panes {
#set -g pane-border-bg colour235
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour235
#set -g pane-active-border-fg colour37
# }

#TODO Sort out colours so that vim and tmux use the same background
#http://www.deanbodenham.com/learn/tmux-pane-colours.html

#TODO find a way to change the pane background to say dark red when synchronized-panes is on
#set -g window-style '{?pane_synchronized, fg=red, fg=black}'
#set -g window-style 'fg=colour250,bg=colour235'
#set -g window-active-style 'fg=colour250,bg=colour235'

# clock
set-window-option -g clock-mode-colour colour37 #green



set-option -s set-clipboard off
bind P paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#bind-key -t vi-copy 'r' rectangle-toggle
# move OS clipboard into tmux paste buffer
#bind C-v run "xclip -o | tmux load-buffer - ; tmux paste-buffer" \; display-message "Copied from OS clipboard"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

# make tmux copy also copy into OS clipboard
# details: http://unix.stackexchange.com/a/131187
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'



# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                            sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on; \
    set -g message-fg red; \
    set -g message-bg black; \
    set -g message-attr bright; \
    set -g window-status-bg default; \
    set -g window-status-fg default; \
    set -g window-status-current-attr bold; \
    set -g window-status-current-bg cyan; \
    set -g window-status-current-fg default; \
    set -g window-status-bell-fg red; \
    set -g window-status-bell-bg black; \
    set -g window-status-activity-fg white; \
    set -g window-status-activity-bg black"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' " \
  set -g utf8 on; \
  set -g status-utf8 on; \
  set -g mouse-utf8 on"

# bind-key syntax changed in 2.4 -- selection / copy / paste
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
   bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
   "set -g message-style fg=red,bg=black; \
    set -g message-style bright; \
    set -g window-status-style          fg=default,bg=default; \
    set -g window-status-current-style  fg=default,bg=cyan,bold; \
    set -g window-status-bell-style     fg=red,bg=black; \
    set -g window-status-activity-style fg=white,bg=black"
